name: Run Cpp tests

on:
  push:
  pull_request:
    branches: ["main"]
jobs:
  test:
    name: Run tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13, windows-latest]

    steps:
      - name: "Setup: checkout repo"
        uses: actions/checkout@v4

      - name: "Setup: get CMake"
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: latestrc

      - name: "Setup: get Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: "Setup: checkout test data repo"
        uses: actions/checkout@v4
        with:
          repository: BSplineX/BSplineX-test-data
          path: test-data

      - name: "Compile: build with CMake"
        run: |
          CORES=$(python -c "import os; print(os.cpu_count())")
          cmake -B build -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo
          cmake --build build --config RelWithDebInfo --parallel $CORES
        shell: bash

      - name: "Test: generate test data"
        run: |
          pip install -r test-data/requirements.txt
          python test-data/gen_data.py --degrees 1 2 3 --output-dir tests/bspline/data

      - name: "Test: run ctest"
        run: |
          CORES=$(python -c "import os; print(os.cpu_count())")
          ctest --test-dir build/tests --output-on-failure -V -j $CORES
